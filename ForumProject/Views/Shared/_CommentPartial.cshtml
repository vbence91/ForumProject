@using ProjectForum.Models
@model IEnumerable<Comment>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<SiteUser> SignInManager
@inject UserManager<SiteUser> UserManager

@foreach (var comment in Model.GroupBy(t => t.DateCreated).OrderBy(t => t.Key))
{
    @foreach (var item in comment)
    {
        <hr />
        <div class="postUpperPart">
            <div class="forumPost-user">@item.Owner.DisplayName<i class="fa-solid fa-circle"></i></div>
            <div class="dateCreated">@item.DateCreated.ToString("dd-MM-yyyy")</div>
        </div>
        <div class="comment-body">
            @item.Content
        </div>
        <div class="ml-3">
            @{
                var list = Model.Where(t => t.ParentId.Equals(item.Uid));
                if (list.Any())
                {
                    <div class="replies">
                        <button class="collapsible" id="replies-btn">Replies </button>
                        <div class="reply-list-wrapper">
                        <div class="reply-list">
                            @foreach (var reply in list)
                            {
                                <div class="postUpperPart">
                                    <div class="forumPost-user">@reply.Owner.DisplayName<i class="fa-solid fa-circle"></i></div>
                                </div>
                                <div class="comment-body">
                                    @reply.Content
                                </div>
                                <hr />
                            }
                        </div>
                        </div>
                    </div>
                    
                        
                }
            }
            @if (SignInManager.IsSignedIn(User))
            {
                <button type="submit" class="btn btn-primary btn-lg mb-3" id="reply-btn">Reply</button>
            }
            <div id="replyContainer" style="display:none;">
                <partial name="_AddReplyPartial" model="item"/>
            </div>
        </div>
    }
}

<script>
    let btns = document.querySelectorAll('#reply-btn')

    btns.forEach(btn => {
        let x = btn.nextElementSibling
        btn.addEventListener('click', event => {
            if (x.style.display === 'none') {
                x.style.display = 'block'
                btn.innerHTML = 'Cancel'
                btn.classList.remove('btn-primary')
                btn.classList.add('btn-light')
            }
            else {
                x.style.display = 'none'
                btn.innerHTML = 'Reply'
                btn.classList.remove('btn-light')
                btn.classList.add('btn-primary')
            }
        })
    })

    let coll = document.querySelectorAll('#replies-btn')

    for (let i = 0; i < coll.length; i++) {
        coll[i].addEventListener('click', function () {
            this.classList.toggle('active')
            this.style.borderBottomRightRadius = 0;
            this.style.borderBottomLeftRadius = 0;
            let content = document.querySelectorAll('.reply-list')[i]
            console.log(content)
            if (content.style.maxHeight) {
                content.style.maxHeight = null;
            } else {
                content.style.maxHeight = content.scrollHeight + 'px';
            }
        })

    }

</script>






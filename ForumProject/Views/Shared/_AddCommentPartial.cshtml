@using Microsoft.AspNetCore.Identity
@using ProjectForum.Models
@inject SignInManager<SiteUser> SignInManager
@inject UserManager<SiteUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    var user = await UserManager.GetUserAsync(User);
    <button class="btn btn-primary btn-lg" id="comment-btn"><i class="fa-solid fa-plus"></i> Add a comment</button>
    <div id="add-comment-wrapper" style="display:none">
        <form action="/Post/AddComment" method="post">
            <div class="form-group">
                <textarea class="form-control" name="content" rows="3"></textarea>
            </div>
            <input type="hidden" name="ownerId" value=@user.Id>
            <input type="hidden" name="postId" value=@Model.Uid>
            <input type="submit" class="btn btn-primary btn-lg" value="Submit" />
            <button class="btn btn-light btn-lg" id="cancel-btn">Cancel</button>
        </form>
    </div>
}
<script>
    let btn = document.querySelector('#comment-btn')

    let x = btn.nextElementSibling
    btn.addEventListener('click', event => {
        if (x.style.display === 'none') {
            x.style.display = 'block'
            btn.style.display = 'none'
        }
        })

    let cancel_btn = document.querySelector('#cancel-btn')
    let form_wrapper = document.querySelector('#add-comment-wrapper')
    cancel_btn.addEventListener('click', event => {
        event.preventDefault()
        form_wrapper.style.display = 'none'
        btn.style.display = 'block'
    })
</script>
